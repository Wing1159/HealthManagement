<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:loc="clr-namespace:Client.Controls">
    <system:String x:Key="AppName">HealthManagement</system:String>
    <system:String x:Key="AppNameZh">健康管理系统</system:String>

    <!--#region 程序的主题色-->
    <SolidColorBrush x:Key="AppHead">#002BB666</SolidColorBrush>
    <SolidColorBrush x:Key="AppColor">#FF888888</SolidColorBrush>
    <SolidColorBrush x:Key="MenuTextColor">#FFFFFFFF</SolidColorBrush>
    <SolidColorBrush x:Key="MenuTextSelectColor">#FF999999</SolidColorBrush>
    <SolidColorBrush x:Key="TextTipColor">#FFFFFFFF</SolidColorBrush>

    <FontFamily x:Key="AppFont">/Client;component/Resources/#AR DESTINE</FontFamily>
    <FontFamily x:Key="MainFont">微软雅黑</FontFamily>
    <FontFamily x:Key="IconFont">/Client;component/Resources/#iconfont</FontFamily>
    <!--#endregion-->

    <!--#region 登录页面的输入框-->
    <VisualBrush  x:Key="LoginNameBrush" TileMode="None"  AlignmentX="Left" Stretch="None">
        <VisualBrush.Visual>
            <Grid Background="#00FFFFFF" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="9"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="1" FontSize="20"  Foreground="{StaticResource TextTipColor}" Text="账号"/>
                <!--USERNAME-->
            </Grid>
        </VisualBrush.Visual>
    </VisualBrush>

    <Style x:Key="LoginInput" TargetType="TextBox">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="BorderThickness" Value="0,0,0,1"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="#333333"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Padding" Value="9,11,9,11"></Setter>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource LoginNameBrush}"/>
            </Trigger>
            <Trigger Property="Text" Value="">
                <Setter Property="Background" Value="{StaticResource LoginNameBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LoginPassWordInput" TargetType="PasswordBox">
        <!--<Setter Property="Foreground" Value="#999999"></Setter>-->
        <Setter Property="Foreground" Value="#333333"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderBrush" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Padding" Value="9,11,9,11"></Setter>
        <Setter Property="loc:PasswordBoxMonitor.IsMonitoring" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Cursor="IBeam" Name="Bd" Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost"/>
                            <Grid Background="#00FFFFFF" Visibility="Collapsed" Name="myStackPanel" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="9"></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock FontFamily="{StaticResource MainFont}" Grid.Column="1"  Foreground="{StaticResource TextTipColor}" 
                                           Text="密码" HorizontalAlignment="Stretch"/>
                                <!--PASSWORD-->
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="myStackPanel" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="loc:PasswordBoxMonitor.PasswordLength" Value="0">
                            <Setter Property="Visibility" TargetName="myStackPanel" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tab容器-->
    <Style x:Key="LeftTabControl" TargetType="TabControl" 
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:s="clr-namespace:System;assembly=mscorlib">
        <Style.Resources>
            <ResourceDictionary />
        </Style.Resources>
        <Setter Property="TextElement.Foreground">
            <Setter.Value>
                <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Padding">
            <Setter.Value>
                <Thickness>0</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderThickness">
            <Setter.Value>
                <Thickness>0</Thickness>
            </Setter.Value>
        </Setter>
        <Setter Property="Border.BorderBrush">
            <Setter.Value>
                <SolidColorBrush>#FF8C8E94</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Panel.Background">
            <Setter.Value>
                <SolidColorBrush>#FFF9F9F9</SolidColorBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.HorizontalContentAlignment">
            <Setter.Value>
                <x:Static Member="HorizontalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.VerticalContentAlignment">
            <Setter.Value>
                <x:Static Member="VerticalAlignment.Center" />
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" />
                            <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="60" Name="RowDefinition0" />
                            <RowDefinition Height="*" Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <ItemsPresenter Name="HeaderPanel" Margin="-2,0,0,0" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"  VerticalAlignment="Center" />
                        </Grid>
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}"  Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="0" Grid.Row="1">
                            <ContentPresenter Content="{TemplateBinding TabControl.SelectedContent}" ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}" ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}" ContentSource="SelectedContent" Name="PART_SelectedContentHost" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Bottom" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,50</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Left" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="TabControl.TabStripPlacement">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Row" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <s:Int32>1</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="ContentPanel">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1">
                                <Setter.Value>
                                    <GridLength>Auto</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition0">
                                <Setter.Value>
                                    <GridLength>*</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RowDefinition.Height" TargetName="RowDefinition1">
                                <Setter.Value>
                                    <GridLength>0</GridLength>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Margin" TargetName="HeaderPanel">
                                <Setter.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <x:Static Member="Dock.Right" />
                            </Trigger.Value>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF8C8C8C"/>
    </Style>
    <Style x:Key="LeftTabItem" TargetType="TabItem" >
        <Setter Property="Width" Value="140"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Height" Value="45"></Setter>
        <Setter Property="Foreground" Value="{StaticResource MenuTextColor}"></Setter>
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate  TargetType="{x:Type TabItem}">
                    <Grid Background="#00000000">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="y" Margin="0,8,0,8" BorderThickness="5,0,0,0" Visibility="Hidden" BorderBrush="{StaticResource MenuTextSelectColor}" Grid.Column="0"></Border>
                        <StackPanel Orientation="Horizontal" x:Name="x" Grid.Column="1">
                            <TextBlock x:Name="Icon" Text="{TemplateBinding Tag}" FontFamily="/Client;component/Resources/#iconfont" FontSize="18" 
                                       Foreground="{StaticResource MenuTextColor}" HorizontalAlignment="Center"
                                       VerticalAlignment="Center" Margin="20,3,5,5"></TextBlock>
                            <ContentPresenter x:Name="Content"  
                                               ContentSource="Header" HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" Margin="8,3,8,6">
                            </ContentPresenter>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource MenuTextSelectColor}"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" TargetName="Icon" Value="{StaticResource MenuTextSelectColor}"></Setter>
                            <Setter Property="Visibility" TargetName="y" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="Width" Value="60">
                            <Setter Property="Visibility" TargetName="Content" Value="Hidden"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentPresenter  Margin="0"  Content="{TemplateBinding Content}"  >
                    </ContentPresenter>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Foreground" Value="{StaticResource MenuTextSelectColor}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region 自定按钮-->

    <!--登陆按钮-->
    <Style x:Key="LoginButton" TargetType="Button">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Name="bg" Background="#FF51AE42"  CornerRadius="5" ></Border>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="#FF3EA42C"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="#FF4AC335"/>
                            <Setter Property="Background" Value="Yellow" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--IconFont按钮-->
    <Style x:Key="IconButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontFamily" Value="/Client;component/Resources/#iconfont" />
        <Setter Property="Foreground" Value="#FFB9BFC1"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Name="bg" Padding="5,0,5,0" CornerRadius="5" BorderThickness="1" BorderBrush="#FFD5E4EA" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="#4CFFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="#66FFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--菜单按钮-->
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
        <Setter Property="FontFamily" Value="/Client;component/Resources/#iconfont" />
        <Setter Property="Foreground" Value="#FFB9BFC1"></Setter>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border Name="bg" Padding="5,0,5,0" CornerRadius="5" BorderThickness="1" BorderBrush="#00D5E4EA" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"  Value="True">
                            <Setter TargetName="bg" Property="Background" Value="#4CFFFFFF"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsPressed" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bg" Property="Background" Value="#66FFFFFF"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <Style x:Key="IconText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Client;component/Resources/#iconfont" />
    </Style>

    <Style x:Key="FLable" TargetType="Label">
        <Setter Property="FontFamily" Value="/Client;component/Resources/#iconfont" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource AppColor}"/>
    </Style>
</ResourceDictionary>